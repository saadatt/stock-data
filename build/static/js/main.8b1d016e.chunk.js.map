{"version":3,"sources":["../node_modules/h8k-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/stock-data/index.js","App.js","registerServiceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","StockData","useState","input","setInput","stoks","setStoks","onClickSearch","a","fetch","response","json","data","console","log","total","className","type","placeholder","data-testid","onChange","target","value","onClick","length","stock","index","key","open","close","high","low","App","header","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.8b1d016e.chunk.js","sourcesContent":["var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t22,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 17;\nmodule.exports = webpackAsyncContext;","import React, {useState} from \"react\";\nimport \"./index.css\";\n\nexport default function StockData() {\n\n    const [input, setInput] = useState();\n    const [stoks, setStoks] = useState();\n\n    const onClickSearch = async () => {\n        try {\n            const response = await fetch('https://jsonmock.hackerrank.com/api/stocks?date=' + input)\n            const data = await response.json();\n            console.log('first', data);\n            if (data.total) {\n                setStoks(data.data);\n            } else {\n                setStoks([]);\n            }\n        } catch (err) {\n            setStoks([]);\n        }\n    }\n\n    return (\n        <div className=\"layout-column align-items-center mt-50\">\n            <section className=\"layout-row align-items-center justify-content-center\">\n                <input\n                    type=\"text\" className=\"large\" placeholder=\"5-January-2000\"\n                    id=\"app-input\" data-testid=\"app-input\"\n                    onChange={e => setInput(e.target.value)}\n                />\n                <button className=\"\" id=\"submit-button\" data-testid=\"submit-button\" onClick={onClickSearch}>\n                    Search\n                </button>\n            </section>\n            {stoks\n                ? stoks.length > 0\n                    ? stoks.map((stock, index) =>\n                        <ul className=\"mt-50 slide-up-fade-in styled\" id=\"stockData\" data-testid=\"stock-data\" key={index}>\n                            <li className=\"py-10\">\n                                Open: {stock.open}\n                            </li>\n                            <li className=\"py-10\">\n                                Close: {stock.close}\n                            </li>\n                            <li className=\"py-10\">\n                                High: {stock.high}\n                            </li>\n                            <li className=\"py-10\">\n                                Low: {stock.low}\n                            </li>\n                        </ul>)\n                    : <div data-testid=\"no-result\">No Results Found</div>\n                : null}\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport 'h8k-components';\nimport StockData from './components/stock-data/index.js';\n\nconst title = \"Stock Data\";\n\nfunction App() {\n  return (\n    <div>\n      <h8k-navbar header={title} />\n      <StockData/>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {applyPolyfills, defineCustomElements} from 'h8k-components/loader';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\nregisterServiceWorker();\n\napplyPolyfills().then(() => {\n  defineCustomElements(window);\n});\n\n"],"sourceRoot":""}